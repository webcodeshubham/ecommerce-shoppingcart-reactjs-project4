🥀 E-Commerce Shopping Cart - React JS - Simple Frotend Project🥀

🌿🥀🌳 Points to Remember 🌳🥀🌿

🔥🥀 Detailed Explaination of Important Notes 🥀🔥

🔥🏆⭐️#1. Mind-Mapping/Project Flow/Project Layout/Project Structure.🔥🏆⭐️

🌺#A. First Setup a Simple React Application with Clean Up Process.
🌺#B. Get the Ingredients on the table first - Node Packages like here, as phosphor-react(React Icons) & react-router-dom (Routings).
🌺#C. Download the dependencies from yarn add (Install the Yarn Package Manager => npm install --global yarn and yarn --version) or npm install.
🌺#D. App.jsx => Start Setting Up - Initial Structure of the Project - App Layout.
🌺#E. App.jsx => Start Setting Up - Routes inside the Project.
🌺#F. App.jsx => Exact Params => The exact param/prop comes into play when you have multiple paths that have similar names like Home - "/".  React router does partial matching. The exact param disables the partial matching for a route and makes sure that it only returns the route if the path is an EXACT match to the current url.
🌺#G. App.jsx => Switch/Routes Inbuilt Components => react-router-dom v6, <Switch /> has been replaced by <Routes />. The switch component looks through all of its child route and it displays the first one whose path matches the current URL. It displays the one Route at a time.
🌺#H. App.jsx/Individual Components/Containers(Pages) => App Layout => Components & Containers(Pages) Layout.
🌺#I. All Files & Folders must be Inside src dir. Relative imports outside of /src/ are not supported.
🌺#J. Build the Components for NavBar, Shopping, & Cart Pages with its own Inputs, Outputs, and its Functionality.
🌺#K. Build the Shopping Cart Page => HTML, CSS, and JavaScript.
🌺#L. products.js => App.jsx => Create a Static Database as an Array of Objects for Products and then map them using Array Map Method.
🌺#M. Create & Style the Shopping & Product Component.
🌺#N. Add the Button Functionality along with Stylings for adding the Product from Home Page to the Cart Page.
🌺#O. useContext API => State Management Mechanism/Tools like Redux is required in order to handle the state of the component & Declare & Define the State Variables and Handler Functions at one place and then use & call them everywhere, whenever there is a need.
🌺#P. useContext API => Context API is a built-in API introduced in ​​React 16.3. It makes it possible to pass data from parent to children nested deep down the component tree directly, instead of passing it down through a chain of props.
🌺#Q. Create a ShopContext & ShopContextProvider Component which means all the Functionality Code and Temporary State Storage within the Context File.
🌺#R. React useContext Hook => React Context is a way to manage state globally. It can be used together with the useState Hook to share state between deeply nested components more easily than with useState alone.
🌺#S. useContext Hook => The Problem => State should be held by the highest parent component in the stack that requires access to the state. To illustrate, we have many nested components. The component at the top and bottom of the stack need access to the state. To do this without Context, we will need to pass the state as "props" through each nested component. This is called "prop drilling".
🌺#T. useContext Hook => The Solution => 
👨‍💻#1. Let's Create the Store Room with Bricks. To create context, you must Import createContext Function and initialize it to a Variable. 
👨‍💻#2. Now, we will get the access of Store Room by Owner via Provider Method.
👨‍💻#3. Next, we'll use the Context Provider to wrap the tree of components that need the state Context.
👨‍💻#4. Wrap child components in the Context Provider and supply the state value. Now, all components in this tree will have access to the user Context.
🌺#U. Read the Same Article here. (https://www.w3schools.com/react/react_usecontext.asp)
🌺#V. useContext Hook => Use the useContext Hook => In order to use the Context in a child component, we need to access it using the useContext Hook.
🌺#W. 
🌺#X. 
🌺#Y. 
🌺#Z.  

🔥🥀 Important Notes 🥀🔥

🌿🍃🌳 Contents - Connect the Dots 🌳🍃🌿

✅#A. Explore all the features of the Project.
✅#B. Get the TMDB API Key.
✅#C. Create the React Application.
✅#D. Setup your Deployment Platform - Firebase Hosting.
✅#E. Get all the Movies.
✅#F. Build the Posters Rows.
✅#G. Build the Banner.
✅#H. Build the Navbar.
✅#I. Add the Trailer Pop-ups Functionality.
✅#J. Deploy App to Firebase.

